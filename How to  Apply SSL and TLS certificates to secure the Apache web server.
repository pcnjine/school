To secure an Apache web server with SSL/TLS certificates, you can use free certificates from Let's Encrypt. Below are the steps to install and configure SSL/TLS certificates using Certbot, the recommended tool for obtaining and managing Let's Encrypt certificates.
1. Install Certbot
First, you need to install Certbot and the Apache plugin. On Ubuntu, you can do this with the following commands:
sudo apt update
sudo apt install certbot python3-certbot-apache
2. Obtain the SSL Certificate
Run Certbot to obtain and install the SSL certificate for your domains. This command will automatically configure Apache to use the certificate:
sudo certbot --apache -d example1.com -d www.example1.com
You can add more domains as needed by appending -d yourdomain.com to the command.
Certbot will guide you through the process. You will need to provide an email address for urgent renewal and security notices and agree to the terms of service.
3. Automatic Renewal
Let's Encrypt certificates are valid for 90 days. Certbot takes care of renewing certificates automatically, but you should ensure that the renewal process works correctly by running:
sudo certbot renew --dry-run
This command simulates the renewal process and helps you verify that it will work without issues when the time comes.
4. Verify SSL Configuration
After Certbot configures your SSL/TLS certificates, you can verify that Apache is using them correctly. Open the SSL configuration file that Certbot created:
sudo nano /etc/apache2/sites-available/example1.com-le-ssl.conf
You should see directives that look like this:
Apache

<VirtualHost *:443>
    ServerAdmin webmaster@example1.com
    ServerName example1.com
    ServerAlias www.example1.com
    DocumentRoot /var/www/example1.com/public_html

    SSLEngine on
    SSLCertificateFile /etc/letsencrypt/live/example1.com/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/example1.com/privkey.pem
    Include /etc/letsencrypt/options-ssl-apache.conf

    ErrorLog ${APACHE_LOG_DIR}/example1.com_error.log
    CustomLog ${APACHE_LOG_DIR}/example1.com_access.log combined
</VirtualHost>
Certbot automatically adds these SSL directives to configure the SSL/TLS settings for your domain.
5. Redirect HTTP to HTTPS
To ensure that all traffic is encrypted, you should redirect HTTP traffic to HTTPS. Open your virtual host configuration for port 80:
sudo nano /etc/apache2/sites-available/example1.com.conf
Add the following lines to redirect HTTP to HTTPS:
apache

<VirtualHost *:80>
    ServerAdmin webmaster@example1.com
    ServerName example1.com
    ServerAlias www.example1.com
    DocumentRoot /var/www/example1.com/public_html

    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

    ErrorLog ${APACHE_LOG_DIR}/example1.com_error.log
    CustomLog ${APACHE_LOG_DIR}/example1.com_access.log combined
</VirtualHost>
6. Restart Apache
Finally, restart Apache to apply all changes:
sudo systemctl restart apache2
7. Verify SSL Installation
You can verify that your site is using SSL/TLS correctly by visiting your site in a web browser and checking for the secure padlock icon in the address bar. Additionally, you can use online tools like SSL Labs' SSL Test to analyze your SSL/TLS configuration and ensure it's set up correctly.
By following these steps, you will have secured your Apache web server with SSL/TLS certificates from Let's Encrypt, ensuring that data transmitted between your server and clients is encrypted.
